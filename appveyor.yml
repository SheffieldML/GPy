environment:
  pip_access:
    secure: 8/ZjXFwtd1S7ixd7PJOpptupKKEDhm2da/q3unabJ00=
  COVERALLS_REPO_TOKEN:
    secure: d3Luic/ESkGaWnZrvWZTKrzO+xaVwJWaRCEP0F+K/9DQGPSRZsJ/Du5g3s4XF+tS
  gpy_version: 1.9.9
  matrix:
    - PYTHON_VERSION: 3.5
      MINICONDA: C:\Miniconda35-x64
    - PYTHON_VERSION: 3.6
      MINICONDA: C:\Miniconda36-x64
    - PYTHON_VERSION: 3.7
      MINICONDA: C:\Miniconda36-x64
    - PYTHON_VERSION: 3.8
      MINICONDA: C:\Miniconda36-x64

#configuration:
#  - Debug
#  - Release

install:
 - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
 - conda config --set always_yes yes --set changeps1 no
 - conda update -q conda
 - conda info -a
 - "conda create -q -n build-environment python=%PYTHON_VERSION% numpy scipy matplotlib"
 - activate build-environment
 # We need wheel installed to build wheels
 - python -m pip install wheel
 # GPy needs paramz
 - python -m pip install paramz
 - python -m pip install nose-show-skipped
 - python -m pip install coverage
 - python -m pip install coveralls
 - python -m pip install codecov
 - python -m pip install twine
 - "python setup.py develop"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  #- "build.cmd %PYTHON%\\python.exe setup.py test"
  - "coverage run travis_tests.py"

after_test:
  # This step builds your wheels.
  - "python setup.py bdist_wheel"
  - codecov

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*


deploy_script:
- echo [distutils] > %USERPROFILE%\\.pypirc
- echo index-servers = >> %USERPROFILE%\\.pypirc
- echo     pypi >> %USERPROFILE%\\.pypirc
- echo     test >> %USERPROFILE%\\.pypirc
- echo[
- echo [pypi] >> %USERPROFILE%\\.pypirc
- echo username = maxz >> %USERPROFILE%\\.pypirc
- echo password = %pip_access% >> %USERPROFILE%\\.pypirc
- echo[
- echo [test] >> %USERPROFILE%\\.pypirc
- echo repository = https://testpypi.python.org/pypi >> %USERPROFILE%\\.pypirc
- echo username = maxz >> %USERPROFILE%\\.pypirc
- echo password = %pip_access% >> %USERPROFILE%\\.pypirc
- .appveyor_twine_upload.bat

# deploy:
#   - provider: GitHub
#     release: GPy-v$(gpy_version)
#     description: 'GPy windows install'
#     artifact: dist/*.exe               # upload wininst to GitHub
#     draft: false
#     prerelease: false
#     on:
#         branch: deploy                 # release from deploy branch only
#         appveyor_repo_tag: true        # deploy on tag push only
